@model licenta.Models.CompanyUsersRegisterViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create users</h2>
<table>
    <tr>
        <td width="60%">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <br />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.user, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.email, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.userTypeId, Model.userTypes, "Select type", new { @class = "form-control", @onchange = "ShowDep()" })
                        </div>
                    </div>

                    <div class="form-group" id="depDropdown">
                        @Html.Label("Departament", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.departmentName, Model.departmentsList, "Select department", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </td>
        <td>
            <img src="~/Images/createUser.png"/>
        </td>
    </tr>
</table>
<script>

    window.onload = ShowDep();

    function ShowDep() {
        var x = document.getElementById("depDropdown");
        var y = document.getElementById("userTypeId");
        var selectedOption =y.options[y.selectedIndex].text;
        if (selectedOption == "Employee") {
            x.style.visibility = 'visible';
        }
        else {
            x.style.visibility = 'hidden';
        }
    }
</script>